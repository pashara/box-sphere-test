//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class StatsEntity {

    public ECS.Components.AttackPointsComponent attackPoints { get { return (ECS.Components.AttackPointsComponent)GetComponent(StatsComponentsLookup.AttackPoints); } }
    public bool hasAttackPoints { get { return HasComponent(StatsComponentsLookup.AttackPoints); } }

    public void AddAttackPoints(float newValue) {
        var index = StatsComponentsLookup.AttackPoints;
        var component = (ECS.Components.AttackPointsComponent)CreateComponent(index, typeof(ECS.Components.AttackPointsComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttackPoints(float newValue) {
        var index = StatsComponentsLookup.AttackPoints;
        var component = (ECS.Components.AttackPointsComponent)CreateComponent(index, typeof(ECS.Components.AttackPointsComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackPoints() {
        RemoveComponent(StatsComponentsLookup.AttackPoints);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class StatsMatcher {

    static Entitas.IMatcher<StatsEntity> _matcherAttackPoints;

    public static Entitas.IMatcher<StatsEntity> AttackPoints {
        get {
            if (_matcherAttackPoints == null) {
                var matcher = (Entitas.Matcher<StatsEntity>)Entitas.Matcher<StatsEntity>.AllOf(StatsComponentsLookup.AttackPoints);
                matcher.componentNames = StatsComponentsLookup.componentNames;
                _matcherAttackPoints = matcher;
            }

            return _matcherAttackPoints;
        }
    }
}
