//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TeamEntity {

    public ECS.Components.TeamIdComponent teamId { get { return (ECS.Components.TeamIdComponent)GetComponent(TeamComponentsLookup.TeamId); } }
    public bool hasTeamId { get { return HasComponent(TeamComponentsLookup.TeamId); } }

    public void AddTeamId(int newValue) {
        var index = TeamComponentsLookup.TeamId;
        var component = (ECS.Components.TeamIdComponent)CreateComponent(index, typeof(ECS.Components.TeamIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTeamId(int newValue) {
        var index = TeamComponentsLookup.TeamId;
        var component = (ECS.Components.TeamIdComponent)CreateComponent(index, typeof(ECS.Components.TeamIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTeamId() {
        RemoveComponent(TeamComponentsLookup.TeamId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TeamMatcher {

    static Entitas.IMatcher<TeamEntity> _matcherTeamId;

    public static Entitas.IMatcher<TeamEntity> TeamId {
        get {
            if (_matcherTeamId == null) {
                var matcher = (Entitas.Matcher<TeamEntity>)Entitas.Matcher<TeamEntity>.AllOf(TeamComponentsLookup.TeamId);
                matcher.componentNames = TeamComponentsLookup.componentNames;
                _matcherTeamId = matcher;
            }

            return _matcherTeamId;
        }
    }
}
